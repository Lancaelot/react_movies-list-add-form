{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","initialValues","formControls","value","inputType","type","label","errormessage","valid","touched","required","NewMovie","state","validURL","url","RegExp","test","validText","text","trim","length","validControl","isValid","validForm","Object","entries","some","entry","handleSubmit","event","preventDefault","props","addMovie","clearForm","setState","onBlurHandler","controlName","formControlCopy","control","onChangeHandler","target","renderInputs","keys","index","Math","ceil","random","onChange","onBlur","onSubmit","this","disabled","PureComponent","PropTypes","func","isRequired","App","moviesFromServer","newMovie","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9941ed3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialValues = {\n  formControls: {\n    title: {\n      value: '',\n      inputType: 'input',\n      type: 'text',\n      label: 'Title',\n      errormessage: 'Enter correct title',\n      valid: false,\n      touched: false,\n      required: true,\n    },\n    description: {\n      value: '',\n      inputType: 'textArea',\n      type: 'text',\n      label: 'Description',\n      errormessage: 'Enter correct description',\n      touched: false,\n      valid: false,\n      required: true,\n    },\n    imgUrl: {\n      value: '',\n      inputType: 'input',\n      type: 'url',\n      label: 'ImgUrl',\n      errormessage: 'Enter correct URL',\n      touched: false,\n      valid: false,\n      required: true,\n    },\n    imdbUrl: {\n      value: '',\n      inputType: 'input',\n      type: 'url',\n      label: 'ImdbUrl',\n      errormessage: 'Enter correct URL',\n      touched: false,\n      valid: false,\n      required: true,\n    },\n    imdbId: {\n      value: '',\n      inputType: 'input',\n      type: 'number',\n      label: 'ImdbId',\n      errormessage: 'Enter correct ID',\n      touched: false,\n      valid: false,\n      required: true,\n    },\n  },\n};\n\nclass NewMovie extends PureComponent {\n  state = {\n    ...initialValues,\n  }\n\n  validURL = (url) => {\n    const pattern = new RegExp('^(https?:\\\\/\\\\/)?'\n      + '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'\n      + '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'\n      + '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'\n      + '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'\n      + '(\\\\#[-a-z\\\\d_]*)?$', 'i');\n\n    return !!pattern.test(url);\n  }\n\n  validText = (text) => {\n    let valid = false;\n\n    if (text.trim().length > 0 && text.trim().length < 240) {\n      valid = true;\n    }\n\n    return valid;\n  }\n\n  validControl = (value, required, touched, type) => {\n    let isValid = true;\n\n    if (type === 'url') {\n      isValid = this.validURL(value);\n    }\n\n    if (type === 'text' || type === 'number') {\n      isValid = this.validText(value);\n    }\n\n    return isValid;\n  }\n\n  validForm = (state) => {\n    return (Object.entries(state).some(entry => entry[1].valid === false));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // eslint-disable-next-line\n    this.props.addMovie(\n      this.state.title,\n      this.state.description,\n      this.state.imgUrl,\n      this.state.imdbUrl,\n      this.state.imdbId,\n    );\n    this.clearForm();\n  }\n\n  clearForm = () => {\n    this.setState({\n      ...initialValues,\n    });\n  }\n\n  onBlurHandler = (controlName) => {\n    // eslint-disable-next-line\n    const formControlCopy = { ...this.state.formControls };\n    const control = { ...formControlCopy[controlName] };\n\n    control.touched = true;\n    formControlCopy[controlName] = control;\n    control.valid = this.validControl(\n      control.value,\n      control.required,\n      control.touched,\n      control.type,\n    );\n    this.setState({\n      formControls: formControlCopy,\n    });\n  };\n\n  onChangeHandler = (event, controlName) => {\n    // eslint-disable-next-line\n    const formControlCopy = { ...this.state.formControls };\n    const control = { ...formControlCopy[controlName] };\n\n    control.value = event.target.value;\n    formControlCopy[controlName] = control;\n    this.setState({\n      [controlName]: event.target.value,\n      formControls: formControlCopy,\n    });\n  }\n\n  renderInputs = () => {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n\n      return (\n        <div\n          className=\"field\"\n          key={`${control.label}${Math.ceil(Math.random(100))}`}\n        >\n          <label>{control.label}</label>\n          {\n            control.inputType === 'input'\n              ? (\n                <input\n                  key={`${control.label}${Math.ceil(Math.random(10))}`}\n                  type={control.type}\n                  value={control.value}\n                  valid={control.valid}\n                  touched={control.touched}\n                  errormessage={control.errormessage}\n                  onChange={event => this.onChangeHandler(event, controlName)}\n                  onBlur={event => this.onBlurHandler(controlName)}\n                />\n              )\n              : (\n                <textarea\n                  key={`${control.label}${Math.ceil(Math.random(10))}`}\n                  type={control.type}\n                  value={control.value}\n                  valid={control.valid}\n                  touched={control.touched}\n                  errormessage={control.errormessage}\n                  onChange={event => this.onChangeHandler(event, controlName)}\n                  onBlur={event => this.onBlurHandler(controlName)}\n                />\n              )\n          }\n          {\n            control.valid && control.touched\n              ? null\n              : <span>{control.errormessage}</span>\n          }\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"ui form\" onSubmit={this.handleSubmit}>\n        {this.renderInputs()}\n        <button\n          className=\"fluid ui button blue\"\n          type=\"submit\"\n          disabled={\n            this.validForm(this.state.formControls)\n            && 'disabled'\n          }\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\nNewMovie.defaultProps = {\n  addMovie: PropTypes.func.isRequired,\n};\n\nexport default NewMovie;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport NewMovie from './components/NewMovie/NewMovie';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    // put your code here\n    this.setState((state) => {\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      return {\n        // eslint-disable-next-line\n        movies: [...this.state.movies, newMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}